version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: agenthq-postgres
    environment:
      POSTGRES_USER: agenthq
      POSTGRES_PASSWORD: password
      POSTGRES_DB: agenthq
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agenthq"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: agenthq-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: agenthq-backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://agenthq:password@postgres:5432/agenthq
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
    env_file:
      - ../backend/.env

  # Celery Worker
  celery-worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: agenthq-celery-worker
    command: celery -A app.agents.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+asyncpg://agenthq:password@postgres:5432/agenthq
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app
    env_file:
      - ../backend/.env

  # Celery Flower (Monitoring)
  celery-flower:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: agenthq-celery-flower
    command: celery -A app.agents.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    depends_on:
      - redis
      - celery-worker
    env_file:
      - ../backend/.env

volumes:
  postgres_data:
  redis_data:
